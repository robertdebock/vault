---
name: enos

on:
  # Only trigger this working using workflow_call. It assumes that secrets are
  # being inherited from the caller.
  workflow_call:
    inputs:
      artifact-name:
        required: true
        type: string
      go-version:
        required: true
        type: string

env:
  PKG_NAME: vault

jobs:
  enos:
    name: Integration
    # strategy:
    #   matrix:
    #     include:
    #       - test: smoke
    #       - test: cli_ui
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.go-version }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          # the terraform wrapper will break Terraform execution in enos because
          # it changes the output to text when we expect it to be JSON.
          terraform_wrapper: false
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
      - name: Set up Enos
        uses: hashicorp/action-setup-enos@v1
        with:
          github-token: ${{ secrets.ELEVATED_GITHUB_TOKEN }}
      - name: Set up AWS SSH private key
        run: |
          mkdir -p ./enos/support
          echo "${{ secrets.ENOS_CI_SSH_KEYPAIR }}" > ./enos/support/private_key.pem
          chmod 600 ./enos/support/private_key.pem
      - name: Run Enos scenario
        id: run
        # Continue once and retry
        continue-on-error: true
        env:
          ENOS_VAR_aws_region: us-east-1
          ENOS_VAR_aws_ssh_keypair_name: enos-ci-ssh-keypair
          ENOS_VAR_aws_ssh_private_key_path: ./support/private_key.pem
          ENOS_VAR_tfc_api_token: ${{ secrets.TF_API_TOKEN }}
        run: |
          export ENOS_VAR_enos_user=$GITHUB_ACTOR && \
          enos scenario run --timeout 60m0s --chdir ./enos integration
      - name: Retry Enos scenario
        id: run_retry
        if: steps.run.outcome == 'failure'
        env:
          ENOS_VAR_aws_region: us-east-1
          ENOS_VAR_aws_ssh_keypair_name: enos-ci-ssh-keypair
          ENOS_VAR_aws_ssh_private_key_path: ./support/private_key.pem
          ENOS_VAR_tfc_api_token: ${{ secrets.TF_API_TOKEN }}
        run: |
          export ENOS_VAR_enos_user=$GITHUB_ACTOR && \
          enos scenario run --timeout 60m0s --chdir ./enos integration
      - name: Destroy Enos scenario
        if: ${{ always() }}
        env:
          ENOS_VAR_aws_region: us-east-1
          ENOS_VAR_aws_ssh_keypair_name: enos-ci-ssh-keypair
          ENOS_VAR_aws_ssh_private_key_path: ./support/private_key.pem
          ENOS_VAR_tfc_api_token: ${{ secrets.TF_API_TOKEN }}
        run: |
          export ENOS_VAR_enos_user=$GITHUB_ACTOR && \
          enos scenario destroy --timeout 60m0s --chdir ./enos integration
      - name: Output debug information on failure
        if: ${{ failure() }}
        run: |
          env
          find ./enos -name "scenario.tf" -exec cat {} \;
